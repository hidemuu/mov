@page "/itinerary"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject SQLiteService SQLiteService

<h2>Itinerary</h2>
<p>Your 5-night, 6-day Singapore trip:</p>

<div>
    @if (DayPlans == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <button @onclick="InitializeDb">Initialize Database</button>
        <button @onclick="SaveData">Save Data</button>
        <button @onclick="LoadData">Load Data</button>
        @foreach (var plan in DayPlans)
        {
            <DayPlanComponent Plan="plan" OnPlanUpdated="UpdatePlan" />
        }
    }
</div>

<button @onclick="NavigateHome">Back to Home</button>

@code {

    #region プロパティ

    private List<DayPlan>? DayPlans;

    #endregion プロパティ

    #region イベント

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<List<DayPlan>>("dayplan.json");
        if (response != null)
        {
            DayPlans = response;
        }
    }

    #endregion イベント

    #region メソッド

    private void UpdatePlan()
    {
        // 必要ならばデータを保存する処理を追加
        StateHasChanged();
    }

    private async Task InitializeDb()
    {
        await SQLiteService.InitializeDatabaseAsync();

        await SQLiteService.ExecuteSqlAsync(@"
            CREATE TABLE IF NOT EXISTS DayPlan (
                Day INTEGER PRIMARY KEY,
                Title TEXT
            );
        ");

        Console.WriteLine("Database initialized and table created");
    }

    private async Task SaveData()

    {
        foreach (var plan in DayPlans)
        {

            var sql = $"INSERT OR REPLACE INTO DayPlan (Day, Title) VALUES ({plan.Day}, '{plan.Title}')";

            await SQLiteService.ExecuteSqlAsync(sql);

        }
        Console.WriteLine("Data saved to SQLite");
    }

    private async Task LoadData()
    {
        var results = await SQLiteService.QuerySqlAsync("SELECT Day, Title FROM DayPlan");

        DayPlans = results.Select(row => new DayPlan

            {

                Day = Convert.ToInt32(row["Day"]),

                Title = row["Title"].ToString()!

            }).ToList();

        Console.WriteLine("Data loaded from SQLite");
    }

    private void NavigateHome()
    {
        NavigationManager.NavigateTo("/");
    }

    #endregion メソッド

    #region モデル

    public class DayPlan
    {
        public int Day { get; set; }
        public string Title { get; set; }
        public List<string> Activities { get; set; } = new();
    }

    #endregion モデル
}