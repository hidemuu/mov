<UserControl
    x:Class="Mov.Designer.Views.DesignerTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:Mov.WpfControls.Components;assembly=Mov.WpfControls"
    xmlns:converter="clr-namespace:Mov.WpfControls.Converters;assembly=Mov.WpfControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
    xmlns:local="clr-namespace:Mov.Designer.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vm="clr-namespace:Mov.Designer.ViewModels;assembly=Mov.Designer.ViewModels"
    d:DataContext="{d:DesignInstance vm:DesignerTreeViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/Mov.WpfDesigns;component/Styles/BaseStyles.xaml" />-->
                <ResourceDictionary Source="/Mov.WpfControls;component/Components/TreeListView.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:BoolToVisibillityConverter x:Key="boolToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <components:TreeListView
            x:Name="treeviewMain"
            dd:DragDrop.IsDragSource="True"
            dd:DragDrop.IsDropTarget="True"
            dd:DragDrop.UseDefaultDragAdorner="True"
            x:FieldModifier="public"
            AllowsColumnReorder="True"
            BindableSelectedItem="{Binding SelectedModel.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Models}">
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <interactivity:EventToReactiveCommand Command="{Binding SelectedItemChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <components:TreeListView.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding AddCommand}"
                        CommandParameter="{Binding BindableSelectedItem, RelativeSource={RelativeSource AncestorType=components:TreeListView}}"
                        Header="追加" />
                    <MenuItem
                        Command="{Binding DeleteCommand}"
                        CommandParameter="{Binding BindableSelectedItem, RelativeSource={RelativeSource AncestorType=components:TreeListView}}"
                        Header="削除" />
                </ContextMenu>
            </components:TreeListView.ContextMenu>
            <components:TreeListView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}" />
            </components:TreeListView.ItemTemplate>
            <components:TreeListView.Columns>
                <!--<GridViewColumn Width="{Binding Attribute.Edit.Width.Value}" Header="{Binding Attribute.Edit.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsEdit.Value, Converter={StaticResource boolToVisibilityConverter}}">
                                <Button
                                    Width="16"
                                    Height="20"
                                    Padding="0"
                                    Command="{Binding AddCommand}"
                                    CommandParameter="{Binding Id.Value}"
                                    Content="+"
                                    FontSize="16"
                                    Foreground="White" />
                                <Button
                                    Width="16"
                                    Height="20"
                                    Padding="0"
                                    Command="{Binding RemoveCommand}"
                                    CommandParameter="{Binding Id.Value}"
                                    Content="-"
                                    FontSize="16"
                                    Foreground="White" />
                            </StackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>-->
                <GridViewColumn Width="{Binding Attribute.Code.Width.Value}" Header="{Binding Attribute.Code.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <StackPanel Orientation="Horizontal">
                                <components:TreeListViewExpander />
                                <ComboBox ItemsSource="{Binding Codes}" SelectedItem="{Binding Code.Value}" />
                            </StackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.IsExpand.Width.Value}" Header="{Binding Attribute.IsExpand.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <CheckBox Foreground="Black" IsChecked="{Binding IsExpand.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.LayoutType.Width.Value}" Header="{Binding Attribute.LayoutType.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <ComboBox ItemsSource="{Binding NodeTypes}" SelectedItem="{Binding LayoutType.Value}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.OrientationType.Width.Value}" Header="{Binding Attribute.OrientationType.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <ComboBox ItemsSource="{Binding OrientationTypes}" SelectedItem="{Binding OrientationType.Value}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.LayoutStyle.Width.Value}" Header="{Binding Attribute.LayoutStyle.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding LayoutStyle.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.LayoutParameter.Width.Value}" Header="{Binding Attribute.LayoutParameter.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding LayoutParameter.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.Name.Width.Value}" Header="{Binding Attribute.Name.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding Name.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.Command.Width.Value}" Header="{Binding Attribute.Command.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding Command.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.ControlType.Width.Value}" Header="{Binding Attribute.ControlType.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding ControlType.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.ControlStyle.Width.Value}" Header="{Binding Attribute.ControlStyle.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding ControlStyle.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding Attribute.Parameter.Width.Value}" Header="{Binding Attribute.Parameter.Header.Value}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:DesignerTreeModel}">
                            <TextBox Foreground="Black" Text="{Binding Parameter.Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </components:TreeListView.Columns>
        </components:TreeListView>
        <Button
            Width="32"
            Height="32"
            Margin="0,0,40,8"
            Padding="0"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Command="{Binding EditCommand}"
            Content="E"
            Cursor="Hand"
            Focusable="False"
            FontSize="20"
            ToolTip="編集します"
            ToolTipService.Placement="Right" />
        <Button
            Width="32"
            Height="32"
            Margin="0,0,8,8"
            Padding="0"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Command="{Binding SaveCommand}"
            Content="S"
            Cursor="Hand"
            Focusable="False"
            FontSize="20"
            ToolTip="保存します"
            ToolTipService.Placement="Right" />
    </Grid>
</UserControl>
