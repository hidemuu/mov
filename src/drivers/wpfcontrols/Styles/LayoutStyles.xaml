<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfControls;component/Styles/BaseStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Expandar  -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Width="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=ActualWidth}"
                            FlowDirection="LeftToRight"
                            Text="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=Header}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid
                                    x:Name="EnableTrue"
                                    Width="17"
                                    Height="14">
                                    <Rectangle
                                        x:Name="CheckNull"
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Fill="LightGray"
                                        Stroke="Gray"
                                        StrokeThickness="1" />
                                    <Rectangle
                                        x:Name="CheckRect"
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Fill="White"
                                        Stroke="LightGray"
                                        StrokeThickness="1" />
                                    <Path
                                        x:Name="CheckMark"
                                        Data="M 3 5 L 5 8 L 13 0"
                                        IsHitTestVisible="False"
                                        SnapsToDevicePixels="False"
                                        Stroke="SteelBlue"
                                        StrokeThickness="2" />
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="17">
                                    <Rectangle
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Fill="WhiteSmoke"
                                        Stroke="Gray"
                                        StrokeDashArray="1,3"
                                        StrokeThickness="1" />
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter />
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid  -->
    <Style x:Key="dataGridViewStyle" TargetType="DataGrid">
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="RowHeight" Value="40" />
        <Setter Property="HorizontalGridLinesBrush" Value="#FFD6EFF7" />
        <Setter Property="VerticalGridLinesBrush" Value="#FFE4E4BD" />
        <Setter Property="AlternatingRowBackground" Value="#FFD6EFF7" />
        <Setter Property="BorderBrush" Value="#FFD7E4F2" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF3399FF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox  -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ProgresBar  -->
    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ProgressBar
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Value="{TemplateBinding Value}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="2.5" Text="{Binding Name}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  GuideBar  -->
    <Style x:Key="GuideBarStyle" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="Black"
                        BorderBrush="#707070"
                        BorderThickness="0"
                        CornerRadius="0">
                        <StackPanel>
                            <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button  -->
    <Style x:Key="AccessButtonCloseStyle" TargetType="Button">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{StaticResource AccessButtonForegroundBrushOFF}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="HoverButtonBorder"
                        Margin="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="5">
                        <TextBlock
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Text="{TemplateBinding Content}">
                            <TextBlock.Background>
                                <ImageBrush
                                    ImageSource="/Images/power.png"
                                    Stretch="Uniform"
                                    TileMode="None" />
                            </TextBlock.Background>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  マウスオーバー  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="BorderBrush" Value="{StaticResource AccessButtonBorderBrushHover}" />
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource AccessButtonBackgroundBrushHover}" />
                            <Setter Property="Foreground" Value="{StaticResource AccessButtonForegroundBrushHover}" />
                        </Trigger>
                        <!--  ボタンを押した時に、背景色を透過  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource AccessButtonBackgroundBrushON}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MetroWindowCloseButtonStyle"
        BasedOn="{StaticResource MetroWindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.75"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter TargetName="grid" Property="Background" Value="#E04343" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="#993D3D" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  プログレスリング  -->
    <Style x:Key="pgr-normal" TargetType="{x:Type Mah:ProgressRing}">
        <Setter Property="Foreground" Value="#33adff" />
        <Setter Property="IsActive" Value="False" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Panel.ZIndex" Value="100" />
    </Style>
    <!--  プログレスオーバーレイ  -->
    <Style x:Key="rec-overlay" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#000000" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Panel.ZIndex" Value="1000" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

</ResourceDictionary>